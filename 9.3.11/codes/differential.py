import ctypes
import matplotlib.pyplot as plt
import numpy as np

lib=ctypes.CDLL('./differential.so')  #loading the .so shared lib which was created from c code

lib.Xco.restype=ctypes.POINTER(ctypes.c_double) #Xco returns a pointer to an array
lib.Yco.restype=ctypes.POINTER(ctypes.c_double) #Yco returns a pointer to an array

#calling C functions to get x and y coordinates
result1=lib.Xco()
result2=lib.Yco()

x_coords=list([])
y_coords=list([])

#looping through points and store them in a list

for i in range(10000):
    x_coords.append(result1[i])
    y_coords.append(result2[i])

#finding the points to plot the actual curve
Xactual=np.linspace(0,10,1000)
Yactual=1 + 0.5 * np.log(1 + Xactual) + 0.75 * np.log(1 + (Xactual)**2) - 0.5 * np.arctan(Xactual)
#plotting the points of the curve generated by c
equation_label = r"$y = 1 + 0.5\ln(1+x) + 0.75\ln(1+x^2) - 0.5\arctan(x)$"
plt.scatter(x_coords, y_coords, label=f"Points generated by finite differences.", s=30)
#plotting the points of actual curve
plt.plot(Xactual,Yactual,'.',color='red',label=f"Actual curve,\n({equation_label}).")

plt.xlabel('X')
plt.ylabel('Y')
plt.title('CURVE')
plt.grid(True)
plt.legend(loc='best')
plt.show()
